/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type TxEncoding = "proto3" | "proto3json";
export interface InstantiateMsg {
  admin?: string | null;
  channel_open_init_options?: ChannelOpenInitOptions | null;
  send_callbacks_to?: string | null;
}
export interface ChannelOpenInitOptions {
  connection_id: string;
  counterparty_connection_id: string;
  counterparty_port_id?: string | null;
  tx_encoding?: TxEncoding | null;
}
export type ExecuteMsg = {
  create_channel: ChannelOpenInitOptions;
} | {
  send_custom_ica_messages: {
    messages: Binary;
    packet_memo?: string | null;
    timeout_seconds?: number | null;
  };
} | {
  update_admin: {
    admin: string;
  };
} | {
  update_callback_address: {
    callback_address?: string | null;
  };
};
export type Binary = string;
export type QueryMsg = {
  get_channel: {};
} | {
  get_contract_state: {};
} | {
  get_callback_counter: {};
};
export interface CallbackCounter {
  error: number;
  success: number;
  timeout: number;
}
export type IbcOrder = "ORDER_UNORDERED" | "ORDER_ORDERED";
export type ChannelStatus = "STATE_UNINITIALIZED_UNSPECIFIED" | "STATE_INIT" | "STATE_TRYOPEN" | "STATE_OPEN" | "STATE_CLOSED";
export interface ChannelState {
  channel: IbcChannel;
  channel_status: ChannelStatus;
}
export interface IbcChannel {
  connection_id: string;
  counterparty_endpoint: IbcEndpoint;
  endpoint: IbcEndpoint;
  order: IbcOrder;
  version: string;
  [k: string]: unknown;
}
export interface IbcEndpoint {
  channel_id: string;
  port_id: string;
  [k: string]: unknown;
}
export type Addr = string;
export interface ContractState {
  admin: Addr;
  allow_channel_open_init?: boolean;
  callback_address?: Addr | null;
  ica_info?: IcaInfo | null;
}
export interface IcaInfo {
  channel_id: string;
  encoding: TxEncoding;
  ica_address: string;
}
